{"ast":null,"code":"var _jsxFileName = \"/Users/nishantrana/Downloads/FoodShala-master/src/components/Restaurants/Restaurants.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./Restaurant.module.css\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport fetchClientsAction from \"../../bloc/fetchClients\";\nimport { getClients, getClientPending, getClientError } from \"../../store/reducer\";\nimport RestaurantCard from \"../UI/RestaurantCard/RestaurantCard\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Restaurants extends Component {\n  componentDidMount() {\n    this.props.fetchClients();\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (prevProps.clients === this.props.client) return false;\n    return true;\n  }\n\n  render() {\n    if (this.props.pending) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 20\n        }\n      }, \"Please wait while we fetch Restaurants..\");\n    }\n\n    if (this.props.error) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }\n      }, \"Something went wrong please try refreshing\");\n    }\n\n    const restaurants = [];\n    this.props.clients.forEach(client => restaurants.push({\n      id: client.id,\n      name: client.restaurantName,\n      cusines: client.cusines\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Restaurants,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"Restaurants\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Card,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, restaurants.map(restaurant => /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/menu\",\n      key: restaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(RestaurantCard, {\n      style: \"text-decoration : none;\",\n      name: restaurant.name,\n      cusines: restaurant.cusines,\n      clicked: () => this.props.menuHandler(restaurant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  clients: getClients(state),\n  pending: getClientPending(state),\n  error: getClientError(state)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  fetchClients: fetchClientsAction\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Restaurants);","map":{"version":3,"sources":["/Users/nishantrana/Downloads/FoodShala-master/src/components/Restaurants/Restaurants.js"],"names":["React","Component","classes","connect","bindActionCreators","fetchClientsAction","getClients","getClientPending","getClientError","RestaurantCard","NavLink","Restaurants","componentDidMount","props","fetchClients","shouldComponentUpdate","prevProps","prevState","clients","client","render","pending","error","restaurants","forEach","push","id","name","restaurantName","cusines","Card","map","restaurant","menuHandler","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AAEA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,SAASC,UAAT,EAAoBC,gBAApB,EAAqCC,cAArC,QAA2D,qBAA3D;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,WAAN,SAA0BV,SAA1B,CAAoC;AAChCW,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,YAAX;AACH;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACxC,QAAID,SAAS,CAACE,OAAV,KAAsB,KAAKL,KAAL,CAAWM,MAArC,EAA6C,OAAO,KAAP;AAC7C,WAAO,IAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,QAAG,KAAKP,KAAL,CAAWQ,OAAd,EAAuB;AACnB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAAP;AACH;;AAED,QAAG,KAAKR,KAAL,CAAWS,KAAd,EAAqB;AACjB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAP;AACH;;AAED,UAAMC,WAAW,GAAG,EAApB;AACA,SAAKV,KAAL,CAAWK,OAAX,CAAmBM,OAAnB,CAA4BL,MAAD,IACvBI,WAAW,CAACE,IAAZ,CAAiB;AACbC,MAAAA,EAAE,EAAEP,MAAM,CAACO,EADE;AAEbC,MAAAA,IAAI,EAAER,MAAM,CAACS,cAFA;AAGbC,MAAAA,OAAO,EAAEV,MAAM,CAACU;AAHH,KAAjB,CADJ;AAOA,wBACI;AAAK,MAAA,SAAS,EAAE3B,OAAO,CAACS,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAK,MAAA,SAAS,EAAET,OAAO,CAAC4B,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,WAAW,CAACQ,GAAZ,CAAiBC,UAAD,iBACb,oBAAC,OAAD;AAAS,MAAA,EAAE,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAEA,UAAU,CAACN,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,cAAD;AACA,MAAA,KAAK,EAAC,yBADN;AAEI,MAAA,IAAI,EAAEM,UAAU,CAACL,IAFrB;AAGI,MAAA,OAAO,EAAEK,UAAU,CAACH,OAHxB;AAII,MAAA,OAAO,EAAE,MACL,KAAKhB,KAAL,CAAWoB,WAAX,CAAuBD,UAAvB,CALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADL,CAFJ,CADJ;AAmBH;;AA/C+B;;AAkDpC,MAAME,eAAe,GAAIC,KAAD,KAAY;AAChCjB,EAAAA,OAAO,EAAEZ,UAAU,CAAC6B,KAAD,CADa;AAEhCd,EAAAA,OAAO,EAAEd,gBAAgB,CAAC4B,KAAD,CAFO;AAGhCb,EAAAA,KAAK,EAAEd,cAAc,CAAC2B,KAAD;AAHW,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IACvBjC,kBAAkB,CACd;AACIU,EAAAA,YAAY,EAAET;AADlB,CADc,EAIdgC,QAJc,CADtB;;AAQA,eAAelC,OAAO,CAAC+B,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CzB,WAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport classes from \"./Restaurant.module.css\";\n\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport fetchClientsAction from \"../../bloc/fetchClients\";\nimport { getClients,getClientPending,getClientError } from \"../../store/reducer\";\nimport RestaurantCard from \"../UI/RestaurantCard/RestaurantCard\";\nimport { NavLink } from \"react-router-dom\";\n\nclass Restaurants extends Component {\n    componentDidMount() {\n        this.props.fetchClients();\n    }\n\n    shouldComponentUpdate(prevProps, prevState) {\n        if (prevProps.clients === this.props.client) return false;\n        return true;\n    }\n\n    render() {\n\n        if(this.props.pending) {\n            return <h1>Please wait while we fetch Restaurants..</h1>\n        }\n\n        if(this.props.error) {\n            return <h1>Something went wrong please try refreshing</h1>\n        }\n        \n        const restaurants = [];\n        this.props.clients.forEach((client) =>\n            restaurants.push({\n                id: client.id,\n                name: client.restaurantName,\n                cusines: client.cusines,\n            })\n        );\n        return (\n            <div className={classes.Restaurants}>\n                <h2>Restaurants</h2>\n                <div className={classes.Card}>\n                    {restaurants.map((restaurant) => (\n                        <NavLink to=\"/menu\" key={restaurant.id}>\n                            <RestaurantCard\n                            style=\"text-decoration : none;\"\n                                name={restaurant.name}\n                                cusines={restaurant.cusines}\n                                clicked={() =>\n                                    this.props.menuHandler(restaurant)\n                                }\n                            />\n                        </NavLink>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    clients: getClients(state),\n    pending: getClientPending(state),\n    error: getClientError(state)\n});\n\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators(\n        {\n            fetchClients: fetchClientsAction,\n        },\n        dispatch\n    );\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Restaurants);\n"]},"metadata":{},"sourceType":"module"}