{"ast":null,"code":"var _jsxFileName = \"/Users/nishantrana/Downloads/FoodShala-master/src/components/RestaurantMenu/RestaurantMenu.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./RestaurantMenu.module.css\";\nimport { getProducts, getCart, getProductsError, getProductsPending } from \"../../store/reducer\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { addItemToCart } from \"../../store/action\";\nimport fetchProductsAction from \"../../bloc/fetchProducts\";\nimport dummy from \"../../assets/Background/dummyRestaurant1.jpg\";\nimport { withRouter } from \"react-router-dom\";\nimport RestaurantMenuItem from \"./RestaurantMenuItem/RestaurantMenuItem\";\n\nclass RestaurantMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.addItemHandler = product => {\n      const updatedProduct = { ...this.state.products\n      };\n      ++updatedProduct[product].quantity;\n      this.setState({\n        products: updatedProduct\n      });\n      this.props.addItemToCart(this.state.products[product]);\n    };\n\n    this.removeItemHandler = product => {\n      const updatedProduct = { ...this.state.products\n      };\n      --updatedProduct[product].quantity;\n      this.setState({\n        products: updatedProduct\n      });\n      this.props.addItemToCart(this.state.products[product]);\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    if (this.props.restaurant === null) {\n      this.props.history.replace(\"/\");\n      return;\n    }\n\n    this.props.fetchProducts(this.props.restaurant.id);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.products !== this.props.products) {\n      const products = {};\n      this.props.products.forEach(product => products[product.id] = {\n        id: product.id,\n        name: product.name,\n        description: product.itemDescription,\n        price: product.price,\n        quantity: this.props.cart[product.id] ? this.props.cart[product.id].quantity : 0,\n        restaurantId: product.restaurantId,\n        mealType: product.mealType\n      });\n      this.setState({\n        products\n      });\n    }\n  }\n\n  render() {\n    if (this.props.pending) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          margin: \"auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }\n      }, \"Please wait while we fetch the menu\");\n    }\n\n    if (this.props.error) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          margin: \"auto\",\n          color: \"red\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, \"Something went worng.. Please Refresh..!\");\n    }\n\n    const restaurant = this.props.restaurant;\n\n    if (restaurant === null) {\n      this.props.history.replace(\"/\");\n      return null;\n    }\n\n    let products = [];\n\n    for (const product in this.state.products) {\n      products.push({\n        id: product,\n        ...this.state.products[product]\n      });\n    }\n\n    const productItems = [];\n    products.forEach(product => {\n      productItems.push( /*#__PURE__*/React.createElement(RestaurantMenuItem, {\n        key: product.id,\n        noEdit: this.props.noEdit,\n        removeItemHandler: () => this.removeItemHandler(product.id),\n        addItemHandler: () => this.addItemHandler(product.id),\n        product: product,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }));\n    });\n\n    if (productItems.length === 0) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 20\n        }\n      }, \" The restaurant not yet added their items\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.RestaurantMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Menu for \", \" \", restaurant.name), productItems);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: getProducts(state),\n  cart: getCart(state),\n  error: getProductsError(state),\n  pending: getProductsPending(state)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addItemToCart: addItemToCart,\n  fetchProducts: fetchProductsAction\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(RestaurantMenu));","map":{"version":3,"sources":["/Users/nishantrana/Downloads/FoodShala-master/src/components/RestaurantMenu/RestaurantMenu.js"],"names":["React","Component","classes","getProducts","getCart","getProductsError","getProductsPending","connect","bindActionCreators","addItemToCart","fetchProductsAction","dummy","withRouter","RestaurantMenuItem","RestaurantMenu","state","addItemHandler","product","updatedProduct","products","quantity","setState","props","removeItemHandler","UNSAFE_componentWillMount","restaurant","history","replace","fetchProducts","id","componentDidUpdate","prevProps","prevState","forEach","name","description","itemDescription","price","cart","restaurantId","mealType","render","pending","margin","error","color","push","productItems","noEdit","length","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport classes from \"./RestaurantMenu.module.css\";\n\nimport {\n    getProducts,\n    getCart,\n    getProductsError,\n    getProductsPending,\n} from \"../../store/reducer\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { addItemToCart } from \"../../store/action\";\nimport fetchProductsAction from \"../../bloc/fetchProducts\";\n\nimport dummy from \"../../assets/Background/dummyRestaurant1.jpg\";\nimport { withRouter } from \"react-router-dom\";\nimport RestaurantMenuItem from \"./RestaurantMenuItem/RestaurantMenuItem\";\n\n\nclass RestaurantMenu extends Component {\n    state = {};\n\n    UNSAFE_componentWillMount() {\n\n        if (this.props.restaurant === null) {\n            this.props.history.replace(\"/\");\n            return;\n        }\n\n        this.props.fetchProducts(this.props.restaurant.id);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.products !== this.props.products) {\n            const products = {};\n            this.props.products.forEach(\n                (product) =>\n                    (products[product.id] = {\n                        id: product.id,\n                        name: product.name,\n                        description: product.itemDescription,\n                        price: product.price,\n                        quantity: this.props.cart[product.id]\n                            ? this.props.cart[product.id].quantity\n                            : 0,\n                        restaurantId: product.restaurantId,\n                        mealType: product.mealType\n                    })\n            );\n\n            this.setState({\n                products,\n            });\n        }\n    }\n\n    addItemHandler = (product) => {\n        const updatedProduct = { ...this.state.products };\n        ++updatedProduct[product].quantity;\n        this.setState({\n            products: updatedProduct,\n        });\n        this.props.addItemToCart(this.state.products[product]);\n    };\n    removeItemHandler = (product) => {\n        const updatedProduct = { ...this.state.products };\n        --updatedProduct[product].quantity;\n        this.setState({\n            products: updatedProduct,\n        });\n\n        this.props.addItemToCart(this.state.products[product]);\n    };\n\n    render() {\n        if (this.props.pending) {\n            return (\n                <h1 style={{ margin: \"auto\" }}>\n                    Please wait while we fetch the menu\n                </h1>\n            );\n        }\n\n        if (this.props.error) {\n            return (\n                <div style={{ margin: \"auto\", color: \"red\" }}>\n                    Something went worng.. Please Refresh..!\n                </div>\n            );\n        }\n\n        const restaurant = this.props.restaurant;\n\n        if (restaurant === null) {\n            this.props.history.replace(\"/\");\n            return null;\n        }\n\n        let products = [];\n\n        for (const product in this.state.products) {\n            products.push({\n                id: product,\n                ...this.state.products[product],\n            });\n        }\n\n        const productItems = [];\n\n        products.forEach((product) => {\n            productItems.push(\n                <RestaurantMenuItem \n                \n                    key={product.id}\n                    noEdit = {this.props.noEdit}\n                    removeItemHandler={() => this.removeItemHandler(product.id)}\n                    addItemHandler={() => this.addItemHandler(product.id)}\n                    product={product}\n                />\n            );\n        });\n\n        if(productItems.length === 0) {\n            return <h1> The restaurant not yet added their items</h1>\n        }\n\n        return (\n            <div className={classes.RestaurantMenu}>\n                <h2>Menu for {\" \"}{restaurant.name}</h2>\n                {/* <div className={classes.Header}>\n                    {restaurant.img ? (\n                        <img src={restaurant.img} alt=\"\" />\n                    ) : (\n                        <img src={dummy} alt=\"\" />\n                    )}\n                </div> */}\n                {productItems}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    products: getProducts(state),\n    cart: getCart(state),\n    error: getProductsError(state),\n    pending: getProductsPending(state),\n});\n\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators(\n        {\n            addItemToCart: addItemToCart,\n            fetchProducts: fetchProductsAction,\n        },\n        dispatch\n    );\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(RestaurantMenu));\n"]},"metadata":{},"sourceType":"module"}