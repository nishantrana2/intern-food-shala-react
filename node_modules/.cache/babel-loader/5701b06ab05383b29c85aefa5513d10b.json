{"ast":null,"code":"var _jsxFileName = \"/Users/nishantrana/Downloads/FoodShala-master/src/components/Input/Input.js\";\nimport React from \"react\";\nimport classes from \"./Input.module.css\";\nimport IconCheck from \"../../assets/Tools/Icon-Check.png\";\n\nconst input = props => {\n  let inputElement;\n  let inputClasses = [props.isTag ? classes.Checkbox : classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case \"input\":\n      if (!props.isTag && !props.isPassword) inputElement = /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        onKeyPress: event => {\n          if (event.which === 13) {\n            event.preventDefault();\n            return false;\n          }\n        },\n        className: inputClasses.join(\" \")\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      }));else inputElement = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: inputClasses.join(\" \"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, props.elementConfig, {\n        onChange: props.changed,\n        value: props.value,\n        onKeyPress: event => {\n          const keyCode = event.keyCode || event.which;\n\n          if (keyCode === 13 || keyCode === 9) {\n            props.addTag();\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      })), props.actions ? /*#__PURE__*/React.createElement(\"img\", {\n        onClick: props.addTag,\n        src: IconCheck,\n        alt: \"Icon-Check\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 33\n        }\n      }) : null));\n      break;\n\n    case \"textarea\":\n      inputClasses.push(classes.TextArea);\n      inputElement = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.TextAreaContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n        className: inputClasses.join(\" \")\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      })));\n      break;\n\n    case \"select\":\n      inputElement = /*#__PURE__*/React.createElement(\"select\", {\n        className: inputClasses.join(\" \"),\n        value: props.value,\n        onChange: props.changed,\n        style: props.value === \"\" ? {\n          color: \"rgba(0,0,0,.58)\",\n          backgroundColor: \"#fff\"\n        } : {\n          color: \"rgba(0,0,0,.88)\",\n          backgroundColor: \"#fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, props.elementConfig.option.map(el => /*#__PURE__*/React.createElement(\"option\", {\n        key: el.value,\n        value: el.value,\n        style: el.value === \"\" ? {\n          color: \"rgba(0,0,0,.58)\",\n          backgroundColor: \"#fff\"\n        } : {\n          color: \"rgba(0,0,0,.88)\",\n          backgroundColor: \"#fff\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, el.displayValue)));\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        className: inputClasses.join(\" \")\n      }, props.elementConfig, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.isTag || props.elementType === \"textarea\" ? classes.InputCheckbox : classes.Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.Label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, props.label), inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["/Users/nishantrana/Downloads/FoodShala-master/src/components/Input/Input.js"],"names":["React","classes","IconCheck","input","props","inputElement","inputClasses","isTag","Checkbox","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","isPassword","event","which","preventDefault","join","elementConfig","value","changed","keyCode","addTag","actions","TextArea","TextAreaContainer","color","backgroundColor","option","map","el","displayValue","InputCheckbox","Input","Label","label"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classes from \"./Input.module.css\";\nimport IconCheck from \"../../assets/Tools/Icon-Check.png\";\n\nconst input = (props) => {\n    let inputElement;\n    let inputClasses = [props.isTag?classes.Checkbox:classes.InputElement];\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n    switch (props.elementType) {\n        case \"input\":\n            if (!props.isTag && !props.isPassword)\n                inputElement = (\n                    <input\n                        onKeyPress={(event) => {\n                            if (event.which === 13) {\n                                event.preventDefault();\n                                return false;\n                            }\n                        }}\n                        className={inputClasses.join(\" \")}\n                        {...props.elementConfig}\n                        value={props.value}\n                        onChange={props.changed}\n                    />\n                );\n           \n            else\n                inputElement = (\n                    <React.Fragment>\n                        <div className={inputClasses.join(\" \")}>\n                            <input\n                                {...props.elementConfig}\n                                onChange={props.changed}\n                                value={props.value}\n                                onKeyPress={(event) => {\n                                    const keyCode =\n                                        event.keyCode || event.which;\n                                    if (keyCode === 13 || keyCode === 9) {\n                                        props.addTag();\n                                    }\n                                }}\n                            />\n\n                            {props.actions ? (\n                                <img\n                                    onClick={props.addTag}\n                                    src={IconCheck}\n                                    alt=\"Icon-Check\"\n                                />\n                            ) : null}\n                        </div>\n                       \n                    </React.Fragment>\n                );\n            break;\n        case \"textarea\":\n            inputClasses.push(classes.TextArea);\n            inputElement = (\n                <div className={classes.TextAreaContainer}>\n                    <textarea\n                        className={inputClasses.join(\" \")}\n                        {...props.elementConfig}\n                        value={props.value}\n                        onChange={props.changed}\n                    />\n                </div>\n            );\n\n            break;\n        case \"select\":\n            inputElement = (\n                <select\n                    className={inputClasses.join(\" \")}\n                    value={props.value}\n                    onChange={props.changed}\n                    style={\n                        props.value === \"\"\n                            ? {\n                                  color: \"rgba(0,0,0,.58)\",\n                                  backgroundColor: \"#fff\",\n                              }\n                            : {\n                                  color: \"rgba(0,0,0,.88)\",\n                                  backgroundColor: \"#fff\",\n                              }\n                    }\n                >\n                    {props.elementConfig.option.map((el) => (\n                        <option\n                            key={el.value}\n                            value={el.value}\n                            style={\n                                el.value === \"\"\n                                    ? {\n                                          color: \"rgba(0,0,0,.58)\",\n                                          backgroundColor: \"#fff\",\n                                      }\n                                    : {\n                                          color: \"rgba(0,0,0,.88)\",\n                                          backgroundColor: \"#fff\",\n                                      }\n                            }\n                        >\n                            {el.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;\n\n        default:\n            inputElement = (\n                <input\n                    className={inputClasses.join(\" \")}\n                    {...props.elementConfig}\n                />\n            );\n    }\n\n    return (\n        <div\n            className={\n                props.isTag || props.elementType === \"textarea\" \n                    ? classes.InputCheckbox\n                    : classes.Input\n            }\n        >\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    );\n};\n\nexport default input;\n"]},"metadata":{},"sourceType":"module"}