{"ast":null,"code":"var _jsxFileName = \"/Users/nishantrana/Downloads/FoodShala-master/src/components/AddMenu/AddMenu.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./AddMenu.module.css\";\nimport { getAddMenuError, getAddMenuPending, getAddMenuSuccess, getUser } from \"../../store/reducer\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport addMenuHandlerAction from \"../../bloc/addMenuHandler\";\nimport fetchProductsAction from \"../../bloc/fetchProducts\";\nimport { withRouter } from \"react-router-dom\";\nimport Input from \"../Input/Input\";\nimport Button from \"../UI/Button/Button\";\nimport Spinner from \"../UI/Spinner/Spinner\";\n\nclass AddMenu extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      primaryDetails: {\n        name: {\n          id: \"1\",\n          elementType: \"input\",\n          label: \"Food Name\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Value\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        itemDescription: {\n          id: \"2\",\n          elementType: \"input\",\n          label: \"Food Description\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Value\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        mealType: {\n          id: \"3\",\n          elementType: \"select\",\n          label: \"Meal Type\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Value\",\n            option: [{\n              value: \"\",\n              displayValue: \"Value\"\n            }, {\n              value: \"veg\",\n              displayValue: \"Veg\"\n            }, {\n              value: \"nonveg\",\n              displayValue: \"Non Veg\"\n            }]\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        price: {\n          id: \"4\",\n          elementType: \"input\",\n          label: \"Price\",\n          elementConfig: {\n            type: \"text\",\n            placeholder: \"Value\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      formIsValid: false,\n      errorText: \"\"\n    };\n\n    this.changeHandler = (event, identifierElement) => {\n      const updatedPrimaryDetails = { ...this.state.primaryDetails\n      };\n      const updatedPrimaryDetailsElement = { ...updatedPrimaryDetails[identifierElement]\n      };\n      updatedPrimaryDetailsElement.value = event.target.value;\n      updatedPrimaryDetailsElement.valid = this.checkValid(updatedPrimaryDetailsElement.value, updatedPrimaryDetailsElement.validation);\n      updatedPrimaryDetailsElement.touched = true;\n      updatedPrimaryDetails[identifierElement] = updatedPrimaryDetailsElement;\n      let formIsValid = true;\n\n      for (const item in updatedPrimaryDetails) {\n        formIsValid = updatedPrimaryDetails[item].valid && formIsValid;\n      }\n\n      this.setState({\n        primaryDetails: updatedPrimaryDetails,\n        formIsValid: formIsValid\n      });\n    };\n\n    this.addMenuHandler = () => {\n      const data = {};\n      data[\"name\"] = this.state.primaryDetails.name.value;\n      data[\"itemDescription\"] = this.state.primaryDetails.itemDescription.value;\n      data[\"mealType\"] = this.state.primaryDetails.mealType.value;\n      data[\"price\"] = +this.state.primaryDetails.price.value;\n      data[\"restaurantId\"] = this.props.user._id;\n      this.props.addMenuHandler(data, this.props.user);\n    };\n  }\n\n  checkValid(value, rules) {\n    let isValid = false;\n\n    if (rules && rules.required) {\n      isValid = value.trim() !== \"\";\n    }\n\n    if (rules && rules.minLength) {\n      isValid = isValid && value.trim().length >= rules.minLength;\n    }\n\n    return isValid;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.addMenu !== this.props.addMenu) {\n      if (this.props.addMenu) {\n        this.props.fetchProducts(this.props.user._id);\n        this.props.cancel();\n        this.props.history.replace(\"/\");\n      }\n    }\n\n    if (this.props.error !== prevProps.error && this.props.error !== null && this.state.formIsValid) {\n      this.setState({\n        errorText: \"Something went wrong please try again\"\n      });\n      const updatedPrimaryDetails = { ...this.state.primaryDetails\n      };\n\n      for (const field in updatedPrimaryDetails) {\n        updatedPrimaryDetails[field].value = \"\";\n      }\n\n      this.setState({\n        primaryDetails: updatedPrimaryDetails,\n        formIsValid: false\n      });\n    }\n  }\n\n  render() {\n    let formElements = [];\n\n    for (let item in this.state.primaryDetails) {\n      formElements.push({\n        id: item,\n        config: this.state.primaryDetails[item]\n      });\n    }\n\n    let form = formElements.map(formElement => {\n      return /*#__PURE__*/React.createElement(Input, {\n        key: formElement.id,\n        changed: event => this.changeHandler(event, formElement.id),\n        label: formElement.config.label,\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value,\n        shouldValidate: formElement.config.validation,\n        invalid: !formElement.config.valid,\n        touched: formElement.config.touched,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.Heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }, \"Add Menu Item\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: classes.SignInForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, this.state.errorText), form, /*#__PURE__*/React.createElement(Button, {\n      fill: true,\n      disabled: !this.state.formIsValid,\n      config: {\n        type: \"button\"\n      },\n      clicked: event => this.addMenuHandler(event),\n      name: this.props.pending ? /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 52\n        }\n      }) : \"Add To Menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  addMenu: getAddMenuSuccess(state),\n  error: getAddMenuError(state),\n  pending: getAddMenuPending(state),\n  user: getUser(state)\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  addMenuHandler: addMenuHandlerAction,\n  fetchProducts: fetchProductsAction\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AddMenu));","map":{"version":3,"sources":["/Users/nishantrana/Downloads/FoodShala-master/src/components/AddMenu/AddMenu.js"],"names":["React","Component","classes","getAddMenuError","getAddMenuPending","getAddMenuSuccess","getUser","connect","bindActionCreators","addMenuHandlerAction","fetchProductsAction","withRouter","Input","Button","Spinner","AddMenu","state","primaryDetails","name","id","elementType","label","elementConfig","type","placeholder","value","validation","required","valid","touched","itemDescription","mealType","option","displayValue","price","formIsValid","errorText","changeHandler","event","identifierElement","updatedPrimaryDetails","updatedPrimaryDetailsElement","target","checkValid","item","setState","addMenuHandler","data","props","user","_id","rules","isValid","trim","minLength","length","componentDidUpdate","prevProps","prevState","addMenu","fetchProducts","cancel","history","replace","error","field","render","formElements","push","config","form","map","formElement","Heading","SignInForm","pending","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport classes from \"./AddMenu.module.css\";\n\nimport {\n    getAddMenuError,\n    getAddMenuPending,\n    getAddMenuSuccess,\n    getUser,\n} from \"../../store/reducer\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport addMenuHandlerAction from \"../../bloc/addMenuHandler\";\nimport fetchProductsAction from \"../../bloc/fetchProducts\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport Input from \"../Input/Input\";\nimport Button from \"../UI/Button/Button\";\nimport Spinner from \"../UI/Spinner/Spinner\";\n\nclass AddMenu extends Component {\n    state = {\n        primaryDetails: {\n            name: {\n                id: \"1\",\n                elementType: \"input\",\n                label: \"Food Name\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Value\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            itemDescription: {\n                id: \"2\",\n                elementType: \"input\",\n                label: \"Food Description\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Value\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            mealType: {\n                id: \"3\",\n                elementType: \"select\",\n                label: \"Meal Type\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Value\",\n                    option: [\n                        { value: \"\", displayValue: \"Value\" },\n                        {\n                            value: \"veg\",\n                            displayValue: \"Veg\",\n                        },\n                        {\n                            value: \"nonveg\",\n                            displayValue: \"Non Veg\",\n                        },\n                    ],\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            price: {\n                id: \"4\",\n                elementType: \"input\",\n                label: \"Price\",\n                elementConfig: {\n                    type: \"text\",\n                    placeholder: \"Value\",\n                },\n                value: \"\",\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n        },\n        formIsValid: false,\n        errorText: \"\",\n    };\n\n    checkValid(value, rules) {\n        let isValid = false;\n        if (rules && rules.required) {\n            isValid = value.trim() !== \"\";\n        }\n        if (rules && rules.minLength) {\n            isValid = isValid && value.trim().length >= rules.minLength;\n        }\n\n        return isValid;\n    }\n\n    changeHandler = (event, identifierElement) => {\n        const updatedPrimaryDetails = {\n            ...this.state.primaryDetails,\n        };\n\n        const updatedPrimaryDetailsElement = {\n            ...updatedPrimaryDetails[identifierElement],\n        };\n\n        updatedPrimaryDetailsElement.value = event.target.value;\n        updatedPrimaryDetailsElement.valid = this.checkValid(\n            updatedPrimaryDetailsElement.value,\n            updatedPrimaryDetailsElement.validation\n        );\n        updatedPrimaryDetailsElement.touched = true;\n        updatedPrimaryDetails[identifierElement] = updatedPrimaryDetailsElement;\n\n        let formIsValid = true;\n        for (const item in updatedPrimaryDetails) {\n            formIsValid = updatedPrimaryDetails[item].valid && formIsValid;\n        }\n\n        this.setState({\n            primaryDetails: updatedPrimaryDetails,\n            formIsValid: formIsValid,\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.addMenu !== this.props.addMenu) {\n            if (this.props.addMenu) {\n                this.props.fetchProducts(this.props.user._id);\n                this.props.cancel();\n                this.props.history.replace(\"/\");\n            }\n        }\n        if (\n            this.props.error !== prevProps.error &&\n            this.props.error !== null &&\n            this.state.formIsValid\n        ) {\n            this.setState({\n                errorText: \"Something went wrong please try again\",\n            });\n            const updatedPrimaryDetails = {\n                ...this.state.primaryDetails,\n            };\n            for (const field in updatedPrimaryDetails) {\n                updatedPrimaryDetails[field].value = \"\";\n            }\n            this.setState({\n                primaryDetails: updatedPrimaryDetails,\n                formIsValid: false,\n            });\n        }\n    }\n\n    addMenuHandler = () => {\n        const data = {};\n\n        data[\"name\"] = this.state.primaryDetails.name.value;\n        data[\n            \"itemDescription\"\n        ] = this.state.primaryDetails.itemDescription.value;\n        data[\"mealType\"] = this.state.primaryDetails.mealType.value;\n        data[\"price\"] = +this.state.primaryDetails.price.value;\n        data[\"restaurantId\"] = this.props.user._id;\n\n        this.props.addMenuHandler(data, this.props.user);\n    };\n\n    render() {\n        let formElements = [];\n\n        for (let item in this.state.primaryDetails) {\n            formElements.push({\n                id: item,\n                config: this.state.primaryDetails[item],\n            });\n        }\n\n        let form = formElements.map((formElement) => {\n            return (\n                <Input\n                    key={formElement.id}\n                    changed={(event) =>\n                        this.changeHandler(event, formElement.id)\n                    }\n                    label={formElement.config.label}\n                    elementType={formElement.config.elementType}\n                    elementConfig={formElement.config.elementConfig}\n                    value={formElement.config.value}\n                    shouldValidate={formElement.config.validation}\n                    invalid={!formElement.config.valid}\n                    touched={formElement.config.touched}\n                />\n            );\n        });\n        return (\n            <React.Fragment>\n                <span className={classes.Heading}>Add Menu Item</span>\n                <form className={classes.SignInForm}>\n                    <h5>{this.state.errorText}</h5>\n                    {form}\n                    <Button\n                        fill\n                        disabled={!this.state.formIsValid}\n                        config={{ type: \"button\" }}\n                        clicked={(event) => this.addMenuHandler(event)}\n                        name={this.props.pending ? <Spinner /> : \"Add To Menu\"}\n                    />\n                </form>\n            </React.Fragment>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    addMenu: getAddMenuSuccess(state),\n    error: getAddMenuError(state),\n    pending: getAddMenuPending(state),\n    user: getUser(state),\n});\n\nconst mapDispatchToProps = (dispatch) =>\n    bindActionCreators(\n        {\n            addMenuHandler: addMenuHandlerAction,\n            fetchProducts: fetchProductsAction,\n        },\n        dispatch\n    );\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(AddMenu));\n"]},"metadata":{},"sourceType":"module"}